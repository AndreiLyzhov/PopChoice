{
  "version": 3,
  "sources": ["../../decamelize/index.js", "../../camelcase/index.js", "../../@langchain/core/dist/load/map_keys.js", "../../@langchain/core/dist/indexing/record_manager.js", "../../uuid/dist/esm-browser/regex.js", "../../uuid/dist/esm-browser/validate.js", "../../uuid/dist/esm-browser/parse.js", "../../uuid/dist/esm-browser/stringify.js", "../../uuid/dist/esm-browser/rng.js", "../../uuid/dist/esm-browser/v35.js", "../../uuid/dist/esm-browser/md5.js", "../../uuid/dist/esm-browser/v3.js", "../../uuid/dist/esm-browser/native.js", "../../uuid/dist/esm-browser/sha1.js", "../../uuid/dist/esm-browser/v5.js", "../../@langchain/core/dist/utils/js-sha1/hash.js", "../../@langchain/core/dist/utils/js-sha256/hash.js", "../../@langchain/core/dist/documents/document.js", "../../@langchain/core/dist/indexing/base.js"],
  "sourcesContent": ["'use strict';\nmodule.exports = function (str, sep) {\n\tif (typeof str !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\tsep = typeof sep === 'undefined' ? '_' : sep;\n\n\treturn str\n\t\t.replace(/([a-z\\d])([A-Z])/g, '$1' + sep + '$2')\n\t\t.replace(/([A-Z]+)([A-Z][a-z\\d]+)/g, '$1' + sep + '$2')\n\t\t.toLowerCase();\n};\n", "'use strict';\n\nconst UPPERCASE = /[\\p{Lu}]/u;\nconst LOWERCASE = /[\\p{Ll}]/u;\nconst LEADING_CAPITAL = /^[\\p{Lu}](?![\\p{Lu}])/gu;\nconst IDENTIFIER = /([\\p{Alpha}\\p{N}_]|$)/u;\nconst SEPARATORS = /[_.\\- ]+/;\n\nconst LEADING_SEPARATORS = new RegExp('^' + SEPARATORS.source);\nconst SEPARATORS_AND_IDENTIFIER = new RegExp(SEPARATORS.source + IDENTIFIER.source, 'gu');\nconst NUMBERS_AND_IDENTIFIER = new RegExp('\\\\d+' + IDENTIFIER.source, 'gu');\n\nconst preserveCamelCase = (string, toLowerCase, toUpperCase) => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && UPPERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && LOWERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = toLowerCase(character) === character && toUpperCase(character) !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = toUpperCase(character) === character && toLowerCase(character) !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst preserveConsecutiveUppercase = (input, toLowerCase) => {\n\tLEADING_CAPITAL.lastIndex = 0;\n\n\treturn input.replace(LEADING_CAPITAL, m1 => toLowerCase(m1));\n};\n\nconst postProcess = (input, toUpperCase) => {\n\tSEPARATORS_AND_IDENTIFIER.lastIndex = 0;\n\tNUMBERS_AND_IDENTIFIER.lastIndex = 0;\n\n\treturn input.replace(SEPARATORS_AND_IDENTIFIER, (_, identifier) => toUpperCase(identifier))\n\t\t.replace(NUMBERS_AND_IDENTIFIER, m => toUpperCase(m));\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = {\n\t\tpascalCase: false,\n\t\tpreserveConsecutiveUppercase: false,\n\t\t...options\n\t};\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tconst toLowerCase = options.locale === false ?\n\t\tstring => string.toLowerCase() :\n\t\tstring => string.toLocaleLowerCase(options.locale);\n\tconst toUpperCase = options.locale === false ?\n\t\tstring => string.toUpperCase() :\n\t\tstring => string.toLocaleUpperCase(options.locale);\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? toUpperCase(input) : toLowerCase(input);\n\t}\n\n\tconst hasUpperCase = input !== toLowerCase(input);\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input, toLowerCase, toUpperCase);\n\t}\n\n\tinput = input.replace(LEADING_SEPARATORS, '');\n\n\tif (options.preserveConsecutiveUppercase) {\n\t\tinput = preserveConsecutiveUppercase(input, toLowerCase);\n\t} else {\n\t\tinput = toLowerCase(input);\n\t}\n\n\tif (options.pascalCase) {\n\t\tinput = toUpperCase(input.charAt(0)) + input.slice(1);\n\t}\n\n\treturn postProcess(input, toUpperCase);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n", "import snakeCase from \"decamelize\";\nimport camelCase from \"camelcase\";\nexport function keyToJson(key, map) {\n    return map?.[key] || snakeCase(key);\n}\nexport function keyFromJson(key, map) {\n    return map?.[key] || camelCase(key);\n}\nexport function mapKeys(fields, mapper, map) {\n    const mapped = {};\n    for (const key in fields) {\n        if (Object.hasOwn(fields, key)) {\n            mapped[mapper(key, map)] = fields[key];\n        }\n    }\n    return mapped;\n}\n", "import { Serializable } from \"../load/serializable.js\";\n// Arbitrary value, used for generating namespaced UUIDs.\nexport const UUIDV5_NAMESPACE = \"10f90ea3-90a4-4962-bf75-83a0f3c1c62a\";\nexport class RecordManager extends Serializable {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain\", \"recordmanagers\"]\n        });\n    }\n}\n", "export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-8][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$/i;", "import REGEX from './regex.js';\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\nexport default validate;", "import validate from './validate.js';\nfunction parse(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n  var v;\n  var arr = new Uint8Array(16);\n\n  // Parse ########-....-....-....-............\n  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;\n  arr[1] = v >>> 16 & 0xff;\n  arr[2] = v >>> 8 & 0xff;\n  arr[3] = v & 0xff;\n\n  // Parse ........-####-....-....-............\n  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;\n  arr[5] = v & 0xff;\n\n  // Parse ........-....-####-....-............\n  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;\n  arr[7] = v & 0xff;\n\n  // Parse ........-....-....-####-............\n  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;\n  arr[9] = v & 0xff;\n\n  // Parse ........-....-....-....-############\n  // (Use \"/\" to avoid 32-bit truncation when bit-shifting high-order bytes)\n  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;\n  arr[11] = v / 0x100000000 & 0xff;\n  arr[12] = v >>> 24 & 0xff;\n  arr[13] = v >>> 16 & 0xff;\n  arr[14] = v >>> 8 & 0xff;\n  arr[15] = v & 0xff;\n  return arr;\n}\nexport default parse;", "import validate from './validate.js';\n\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  //\n  // Note to future-self: No, you can't remove the `toLowerCase()` call.\n  // REF: https://github.com/uuidjs/uuid/pull/677#issuecomment-1757351351\n  return (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase();\n}\nfunction stringify(arr, offset = 0) {\n  var uuid = unsafeStringify(arr, offset);\n  // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n  return uuid;\n}\nexport default stringify;", "// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\n\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n  return getRandomValues(rnds8);\n}", "import { unsafeStringify } from './stringify.js';\nimport parse from './parse.js';\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n\n  var bytes = [];\n  for (var i = 0; i < str.length; ++i) {\n    bytes.push(str.charCodeAt(i));\n  }\n  return bytes;\n}\nexport var DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nexport var URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\nexport default function v35(name, version, hashfunc) {\n  function generateUUID(value, namespace, buf, offset) {\n    var _namespace;\n    if (typeof value === 'string') {\n      value = stringToBytes(value);\n    }\n    if (typeof namespace === 'string') {\n      namespace = parse(namespace);\n    }\n    if (((_namespace = namespace) === null || _namespace === void 0 ? void 0 : _namespace.length) !== 16) {\n      throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');\n    }\n\n    // Compute hash of namespace and value, Per 4.3\n    // Future: Use spread syntax when supported on all platforms, e.g. `bytes =\n    // hashfunc([...namespace, ... value])`\n    var bytes = new Uint8Array(16 + value.length);\n    bytes.set(namespace);\n    bytes.set(value, namespace.length);\n    bytes = hashfunc(bytes);\n    bytes[6] = bytes[6] & 0x0f | version;\n    bytes[8] = bytes[8] & 0x3f | 0x80;\n    if (buf) {\n      offset = offset || 0;\n      for (var i = 0; i < 16; ++i) {\n        buf[offset + i] = bytes[i];\n      }\n      return buf;\n    }\n    return unsafeStringify(bytes);\n  }\n\n  // Function#name is not settable on some platforms (#270)\n  try {\n    generateUUID.name = name;\n  } catch (err) {}\n\n  // For CommonJS default export support\n  generateUUID.DNS = DNS;\n  generateUUID.URL = URL;\n  return generateUUID;\n}", "/*\n * Browser-compatible JavaScript MD5\n *\n * Modification of JavaScript MD5\n * https://github.com/blueimp/JavaScript-MD5\n *\n * Copyright 2011, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n *\n * Based on\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n * Digest Algorithm, as defined in RFC 1321.\n * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for more info.\n */\nfunction md5(bytes) {\n  if (typeof bytes === 'string') {\n    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = new Uint8Array(msg.length);\n    for (var i = 0; i < msg.length; ++i) {\n      bytes[i] = msg.charCodeAt(i);\n    }\n  }\n  return md5ToHexEncodedArray(wordsToMd5(bytesToWords(bytes), bytes.length * 8));\n}\n\n/*\n * Convert an array of little-endian words to an array of bytes\n */\nfunction md5ToHexEncodedArray(input) {\n  var output = [];\n  var length32 = input.length * 32;\n  var hexTab = '0123456789abcdef';\n  for (var i = 0; i < length32; i += 8) {\n    var x = input[i >> 5] >>> i % 32 & 0xff;\n    var hex = parseInt(hexTab.charAt(x >>> 4 & 0x0f) + hexTab.charAt(x & 0x0f), 16);\n    output.push(hex);\n  }\n  return output;\n}\n\n/**\n * Calculate output length with padding and bit length\n */\nfunction getOutputLength(inputLength8) {\n  return (inputLength8 + 64 >>> 9 << 4) + 14 + 1;\n}\n\n/*\n * Calculate the MD5 of an array of little-endian words, and a bit length.\n */\nfunction wordsToMd5(x, len) {\n  /* append padding */\n  x[len >> 5] |= 0x80 << len % 32;\n  x[getOutputLength(len) - 1] = len;\n  var a = 1732584193;\n  var b = -271733879;\n  var c = -1732584194;\n  var d = 271733878;\n  for (var i = 0; i < x.length; i += 16) {\n    var olda = a;\n    var oldb = b;\n    var oldc = c;\n    var oldd = d;\n    a = md5ff(a, b, c, d, x[i], 7, -680876936);\n    d = md5ff(d, a, b, c, x[i + 1], 12, -389564586);\n    c = md5ff(c, d, a, b, x[i + 2], 17, 606105819);\n    b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330);\n    a = md5ff(a, b, c, d, x[i + 4], 7, -176418897);\n    d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426);\n    c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341);\n    b = md5ff(b, c, d, a, x[i + 7], 22, -45705983);\n    a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416);\n    d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417);\n    c = md5ff(c, d, a, b, x[i + 10], 17, -42063);\n    b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162);\n    a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682);\n    d = md5ff(d, a, b, c, x[i + 13], 12, -40341101);\n    c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290);\n    b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329);\n    a = md5gg(a, b, c, d, x[i + 1], 5, -165796510);\n    d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632);\n    c = md5gg(c, d, a, b, x[i + 11], 14, 643717713);\n    b = md5gg(b, c, d, a, x[i], 20, -373897302);\n    a = md5gg(a, b, c, d, x[i + 5], 5, -701558691);\n    d = md5gg(d, a, b, c, x[i + 10], 9, 38016083);\n    c = md5gg(c, d, a, b, x[i + 15], 14, -660478335);\n    b = md5gg(b, c, d, a, x[i + 4], 20, -405537848);\n    a = md5gg(a, b, c, d, x[i + 9], 5, 568446438);\n    d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690);\n    c = md5gg(c, d, a, b, x[i + 3], 14, -187363961);\n    b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501);\n    a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467);\n    d = md5gg(d, a, b, c, x[i + 2], 9, -51403784);\n    c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473);\n    b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734);\n    a = md5hh(a, b, c, d, x[i + 5], 4, -378558);\n    d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463);\n    c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562);\n    b = md5hh(b, c, d, a, x[i + 14], 23, -35309556);\n    a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060);\n    d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353);\n    c = md5hh(c, d, a, b, x[i + 7], 16, -155497632);\n    b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640);\n    a = md5hh(a, b, c, d, x[i + 13], 4, 681279174);\n    d = md5hh(d, a, b, c, x[i], 11, -358537222);\n    c = md5hh(c, d, a, b, x[i + 3], 16, -722521979);\n    b = md5hh(b, c, d, a, x[i + 6], 23, 76029189);\n    a = md5hh(a, b, c, d, x[i + 9], 4, -640364487);\n    d = md5hh(d, a, b, c, x[i + 12], 11, -421815835);\n    c = md5hh(c, d, a, b, x[i + 15], 16, 530742520);\n    b = md5hh(b, c, d, a, x[i + 2], 23, -995338651);\n    a = md5ii(a, b, c, d, x[i], 6, -198630844);\n    d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415);\n    c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905);\n    b = md5ii(b, c, d, a, x[i + 5], 21, -57434055);\n    a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571);\n    d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606);\n    c = md5ii(c, d, a, b, x[i + 10], 15, -1051523);\n    b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799);\n    a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359);\n    d = md5ii(d, a, b, c, x[i + 15], 10, -30611744);\n    c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380);\n    b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649);\n    a = md5ii(a, b, c, d, x[i + 4], 6, -145523070);\n    d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379);\n    c = md5ii(c, d, a, b, x[i + 2], 15, 718787259);\n    b = md5ii(b, c, d, a, x[i + 9], 21, -343485551);\n    a = safeAdd(a, olda);\n    b = safeAdd(b, oldb);\n    c = safeAdd(c, oldc);\n    d = safeAdd(d, oldd);\n  }\n  return [a, b, c, d];\n}\n\n/*\n * Convert an array bytes to an array of little-endian words\n * Characters >255 have their high-byte silently ignored.\n */\nfunction bytesToWords(input) {\n  if (input.length === 0) {\n    return [];\n  }\n  var length8 = input.length * 8;\n  var output = new Uint32Array(getOutputLength(length8));\n  for (var i = 0; i < length8; i += 8) {\n    output[i >> 5] |= (input[i / 8] & 0xff) << i % 32;\n  }\n  return output;\n}\n\n/*\n * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n * to work around bugs in some JS interpreters.\n */\nfunction safeAdd(x, y) {\n  var lsw = (x & 0xffff) + (y & 0xffff);\n  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n  return msw << 16 | lsw & 0xffff;\n}\n\n/*\n * Bitwise rotate a 32-bit number to the left.\n */\nfunction bitRotateLeft(num, cnt) {\n  return num << cnt | num >>> 32 - cnt;\n}\n\n/*\n * These functions implement the four basic operations the algorithm uses.\n */\nfunction md5cmn(q, a, b, x, s, t) {\n  return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b);\n}\nfunction md5ff(a, b, c, d, x, s, t) {\n  return md5cmn(b & c | ~b & d, a, b, x, s, t);\n}\nfunction md5gg(a, b, c, d, x, s, t) {\n  return md5cmn(b & d | c & ~d, a, b, x, s, t);\n}\nfunction md5hh(a, b, c, d, x, s, t) {\n  return md5cmn(b ^ c ^ d, a, b, x, s, t);\n}\nfunction md5ii(a, b, c, d, x, s, t) {\n  return md5cmn(c ^ (b | ~d), a, b, x, s, t);\n}\nexport default md5;", "import v35 from './v35.js';\nimport md5 from './md5.js';\nvar v3 = v35('v3', 0x30, md5);\nexport default v3;", "var randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};", "// Adapted from Chris Veness' SHA1 code at\n// http://www.movable-type.co.uk/scripts/sha1.html\nfunction f(s, x, y, z) {\n  switch (s) {\n    case 0:\n      return x & y ^ ~x & z;\n    case 1:\n      return x ^ y ^ z;\n    case 2:\n      return x & y ^ x & z ^ y & z;\n    case 3:\n      return x ^ y ^ z;\n  }\n}\nfunction ROTL(x, n) {\n  return x << n | x >>> 32 - n;\n}\nfunction sha1(bytes) {\n  var K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xca62c1d6];\n  var H = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n  if (typeof bytes === 'string') {\n    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = [];\n    for (var i = 0; i < msg.length; ++i) {\n      bytes.push(msg.charCodeAt(i));\n    }\n  } else if (!Array.isArray(bytes)) {\n    // Convert Array-like to Array\n    bytes = Array.prototype.slice.call(bytes);\n  }\n  bytes.push(0x80);\n  var l = bytes.length / 4 + 2;\n  var N = Math.ceil(l / 16);\n  var M = new Array(N);\n  for (var _i = 0; _i < N; ++_i) {\n    var arr = new Uint32Array(16);\n    for (var j = 0; j < 16; ++j) {\n      arr[j] = bytes[_i * 64 + j * 4] << 24 | bytes[_i * 64 + j * 4 + 1] << 16 | bytes[_i * 64 + j * 4 + 2] << 8 | bytes[_i * 64 + j * 4 + 3];\n    }\n    M[_i] = arr;\n  }\n  M[N - 1][14] = (bytes.length - 1) * 8 / Math.pow(2, 32);\n  M[N - 1][14] = Math.floor(M[N - 1][14]);\n  M[N - 1][15] = (bytes.length - 1) * 8 & 0xffffffff;\n  for (var _i2 = 0; _i2 < N; ++_i2) {\n    var W = new Uint32Array(80);\n    for (var t = 0; t < 16; ++t) {\n      W[t] = M[_i2][t];\n    }\n    for (var _t = 16; _t < 80; ++_t) {\n      W[_t] = ROTL(W[_t - 3] ^ W[_t - 8] ^ W[_t - 14] ^ W[_t - 16], 1);\n    }\n    var a = H[0];\n    var b = H[1];\n    var c = H[2];\n    var d = H[3];\n    var e = H[4];\n    for (var _t2 = 0; _t2 < 80; ++_t2) {\n      var s = Math.floor(_t2 / 20);\n      var T = ROTL(a, 5) + f(s, b, c, d) + e + K[s] + W[_t2] >>> 0;\n      e = d;\n      d = c;\n      c = ROTL(b, 30) >>> 0;\n      b = a;\n      a = T;\n    }\n    H[0] = H[0] + a >>> 0;\n    H[1] = H[1] + b >>> 0;\n    H[2] = H[2] + c >>> 0;\n    H[3] = H[3] + d >>> 0;\n    H[4] = H[4] + e >>> 0;\n  }\n  return [H[0] >> 24 & 0xff, H[0] >> 16 & 0xff, H[0] >> 8 & 0xff, H[0] & 0xff, H[1] >> 24 & 0xff, H[1] >> 16 & 0xff, H[1] >> 8 & 0xff, H[1] & 0xff, H[2] >> 24 & 0xff, H[2] >> 16 & 0xff, H[2] >> 8 & 0xff, H[2] & 0xff, H[3] >> 24 & 0xff, H[3] >> 16 & 0xff, H[3] >> 8 & 0xff, H[3] & 0xff, H[4] >> 24 & 0xff, H[4] >> 16 & 0xff, H[4] >> 8 & 0xff, H[4] & 0xff];\n}\nexport default sha1;", "import v35 from './v35.js';\nimport sha1 from './sha1.js';\nvar v5 = v35('v5', 0x50, sha1);\nexport default v5;", "// @ts-nocheck\n// Inlined to deal with portability issues with importing crypto module\n/*\n * [js-sha1]{@link https://github.com/emn178/js-sha1}\n *\n * @version 0.6.0\n * @author Chen, Yi-Cyuan [emn178@gmail.com]\n * @copyright Chen, Yi-Cyuan 2014-2017\n * @license MIT\n */\n/*jslint bitwise: true */\n\"use strict\";\nvar root = typeof window === \"object\" ? window : {};\nvar HEX_CHARS = \"0123456789abcdef\".split(\"\");\nvar EXTRA = [-2147483648, 8388608, 32768, 128];\nvar SHIFT = [24, 16, 8, 0];\nvar OUTPUT_TYPES = [\"hex\", \"array\", \"digest\", \"arrayBuffer\"];\nvar blocks = [];\nfunction Sha1(sharedMemory) {\n    if (sharedMemory) {\n        blocks[0] =\n            blocks[16] =\n                blocks[1] =\n                    blocks[2] =\n                        blocks[3] =\n                            blocks[4] =\n                                blocks[5] =\n                                    blocks[6] =\n                                        blocks[7] =\n                                            blocks[8] =\n                                                blocks[9] =\n                                                    blocks[10] =\n                                                        blocks[11] =\n                                                            blocks[12] =\n                                                                blocks[13] =\n                                                                    blocks[14] =\n                                                                        blocks[15] =\n                                                                            0;\n        this.blocks = blocks;\n    }\n    else {\n        this.blocks = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n    }\n    this.h0 = 0x67452301;\n    this.h1 = 0xefcdab89;\n    this.h2 = 0x98badcfe;\n    this.h3 = 0x10325476;\n    this.h4 = 0xc3d2e1f0;\n    this.block = this.start = this.bytes = this.hBytes = 0;\n    this.finalized = this.hashed = false;\n    this.first = true;\n}\nSha1.prototype.update = function (message) {\n    if (this.finalized) {\n        return;\n    }\n    var notString = typeof message !== \"string\";\n    if (notString && message.constructor === root.ArrayBuffer) {\n        message = new Uint8Array(message);\n    }\n    var code, index = 0, i, length = message.length || 0, blocks = this.blocks;\n    while (index < length) {\n        if (this.hashed) {\n            this.hashed = false;\n            blocks[0] = this.block;\n            blocks[16] =\n                blocks[1] =\n                    blocks[2] =\n                        blocks[3] =\n                            blocks[4] =\n                                blocks[5] =\n                                    blocks[6] =\n                                        blocks[7] =\n                                            blocks[8] =\n                                                blocks[9] =\n                                                    blocks[10] =\n                                                        blocks[11] =\n                                                            blocks[12] =\n                                                                blocks[13] =\n                                                                    blocks[14] =\n                                                                        blocks[15] =\n                                                                            0;\n        }\n        if (notString) {\n            for (i = this.start; index < length && i < 64; ++index) {\n                blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];\n            }\n        }\n        else {\n            for (i = this.start; index < length && i < 64; ++index) {\n                code = message.charCodeAt(index);\n                if (code < 0x80) {\n                    blocks[i >> 2] |= code << SHIFT[i++ & 3];\n                }\n                else if (code < 0x800) {\n                    blocks[i >> 2] |= (0xc0 | (code >> 6)) << SHIFT[i++ & 3];\n                    blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n                }\n                else if (code < 0xd800 || code >= 0xe000) {\n                    blocks[i >> 2] |= (0xe0 | (code >> 12)) << SHIFT[i++ & 3];\n                    blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n                    blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n                }\n                else {\n                    code =\n                        0x10000 +\n                            (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));\n                    blocks[i >> 2] |= (0xf0 | (code >> 18)) << SHIFT[i++ & 3];\n                    blocks[i >> 2] |= (0x80 | ((code >> 12) & 0x3f)) << SHIFT[i++ & 3];\n                    blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n                    blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n                }\n            }\n        }\n        this.lastByteIndex = i;\n        this.bytes += i - this.start;\n        if (i >= 64) {\n            this.block = blocks[16];\n            this.start = i - 64;\n            this.hash();\n            this.hashed = true;\n        }\n        else {\n            this.start = i;\n        }\n    }\n    if (this.bytes > 4294967295) {\n        this.hBytes += (this.bytes / 4294967296) << 0;\n        this.bytes = this.bytes % 4294967296;\n    }\n    return this;\n};\nSha1.prototype.finalize = function () {\n    if (this.finalized) {\n        return;\n    }\n    this.finalized = true;\n    var blocks = this.blocks, i = this.lastByteIndex;\n    blocks[16] = this.block;\n    blocks[i >> 2] |= EXTRA[i & 3];\n    this.block = blocks[16];\n    if (i >= 56) {\n        if (!this.hashed) {\n            this.hash();\n        }\n        blocks[0] = this.block;\n        blocks[16] =\n            blocks[1] =\n                blocks[2] =\n                    blocks[3] =\n                        blocks[4] =\n                            blocks[5] =\n                                blocks[6] =\n                                    blocks[7] =\n                                        blocks[8] =\n                                            blocks[9] =\n                                                blocks[10] =\n                                                    blocks[11] =\n                                                        blocks[12] =\n                                                            blocks[13] =\n                                                                blocks[14] =\n                                                                    blocks[15] =\n                                                                        0;\n    }\n    blocks[14] = (this.hBytes << 3) | (this.bytes >>> 29);\n    blocks[15] = this.bytes << 3;\n    this.hash();\n};\nSha1.prototype.hash = function () {\n    var a = this.h0, b = this.h1, c = this.h2, d = this.h3, e = this.h4;\n    var f, j, t, blocks = this.blocks;\n    for (j = 16; j < 80; ++j) {\n        t = blocks[j - 3] ^ blocks[j - 8] ^ blocks[j - 14] ^ blocks[j - 16];\n        blocks[j] = (t << 1) | (t >>> 31);\n    }\n    for (j = 0; j < 20; j += 5) {\n        f = (b & c) | (~b & d);\n        t = (a << 5) | (a >>> 27);\n        e = (t + f + e + 1518500249 + blocks[j]) << 0;\n        b = (b << 30) | (b >>> 2);\n        f = (a & b) | (~a & c);\n        t = (e << 5) | (e >>> 27);\n        d = (t + f + d + 1518500249 + blocks[j + 1]) << 0;\n        a = (a << 30) | (a >>> 2);\n        f = (e & a) | (~e & b);\n        t = (d << 5) | (d >>> 27);\n        c = (t + f + c + 1518500249 + blocks[j + 2]) << 0;\n        e = (e << 30) | (e >>> 2);\n        f = (d & e) | (~d & a);\n        t = (c << 5) | (c >>> 27);\n        b = (t + f + b + 1518500249 + blocks[j + 3]) << 0;\n        d = (d << 30) | (d >>> 2);\n        f = (c & d) | (~c & e);\n        t = (b << 5) | (b >>> 27);\n        a = (t + f + a + 1518500249 + blocks[j + 4]) << 0;\n        c = (c << 30) | (c >>> 2);\n    }\n    for (; j < 40; j += 5) {\n        f = b ^ c ^ d;\n        t = (a << 5) | (a >>> 27);\n        e = (t + f + e + 1859775393 + blocks[j]) << 0;\n        b = (b << 30) | (b >>> 2);\n        f = a ^ b ^ c;\n        t = (e << 5) | (e >>> 27);\n        d = (t + f + d + 1859775393 + blocks[j + 1]) << 0;\n        a = (a << 30) | (a >>> 2);\n        f = e ^ a ^ b;\n        t = (d << 5) | (d >>> 27);\n        c = (t + f + c + 1859775393 + blocks[j + 2]) << 0;\n        e = (e << 30) | (e >>> 2);\n        f = d ^ e ^ a;\n        t = (c << 5) | (c >>> 27);\n        b = (t + f + b + 1859775393 + blocks[j + 3]) << 0;\n        d = (d << 30) | (d >>> 2);\n        f = c ^ d ^ e;\n        t = (b << 5) | (b >>> 27);\n        a = (t + f + a + 1859775393 + blocks[j + 4]) << 0;\n        c = (c << 30) | (c >>> 2);\n    }\n    for (; j < 60; j += 5) {\n        f = (b & c) | (b & d) | (c & d);\n        t = (a << 5) | (a >>> 27);\n        e = (t + f + e - 1894007588 + blocks[j]) << 0;\n        b = (b << 30) | (b >>> 2);\n        f = (a & b) | (a & c) | (b & c);\n        t = (e << 5) | (e >>> 27);\n        d = (t + f + d - 1894007588 + blocks[j + 1]) << 0;\n        a = (a << 30) | (a >>> 2);\n        f = (e & a) | (e & b) | (a & b);\n        t = (d << 5) | (d >>> 27);\n        c = (t + f + c - 1894007588 + blocks[j + 2]) << 0;\n        e = (e << 30) | (e >>> 2);\n        f = (d & e) | (d & a) | (e & a);\n        t = (c << 5) | (c >>> 27);\n        b = (t + f + b - 1894007588 + blocks[j + 3]) << 0;\n        d = (d << 30) | (d >>> 2);\n        f = (c & d) | (c & e) | (d & e);\n        t = (b << 5) | (b >>> 27);\n        a = (t + f + a - 1894007588 + blocks[j + 4]) << 0;\n        c = (c << 30) | (c >>> 2);\n    }\n    for (; j < 80; j += 5) {\n        f = b ^ c ^ d;\n        t = (a << 5) | (a >>> 27);\n        e = (t + f + e - 899497514 + blocks[j]) << 0;\n        b = (b << 30) | (b >>> 2);\n        f = a ^ b ^ c;\n        t = (e << 5) | (e >>> 27);\n        d = (t + f + d - 899497514 + blocks[j + 1]) << 0;\n        a = (a << 30) | (a >>> 2);\n        f = e ^ a ^ b;\n        t = (d << 5) | (d >>> 27);\n        c = (t + f + c - 899497514 + blocks[j + 2]) << 0;\n        e = (e << 30) | (e >>> 2);\n        f = d ^ e ^ a;\n        t = (c << 5) | (c >>> 27);\n        b = (t + f + b - 899497514 + blocks[j + 3]) << 0;\n        d = (d << 30) | (d >>> 2);\n        f = c ^ d ^ e;\n        t = (b << 5) | (b >>> 27);\n        a = (t + f + a - 899497514 + blocks[j + 4]) << 0;\n        c = (c << 30) | (c >>> 2);\n    }\n    this.h0 = (this.h0 + a) << 0;\n    this.h1 = (this.h1 + b) << 0;\n    this.h2 = (this.h2 + c) << 0;\n    this.h3 = (this.h3 + d) << 0;\n    this.h4 = (this.h4 + e) << 0;\n};\nSha1.prototype.hex = function () {\n    this.finalize();\n    var h0 = this.h0, h1 = this.h1, h2 = this.h2, h3 = this.h3, h4 = this.h4;\n    return (HEX_CHARS[(h0 >> 28) & 0x0f] +\n        HEX_CHARS[(h0 >> 24) & 0x0f] +\n        HEX_CHARS[(h0 >> 20) & 0x0f] +\n        HEX_CHARS[(h0 >> 16) & 0x0f] +\n        HEX_CHARS[(h0 >> 12) & 0x0f] +\n        HEX_CHARS[(h0 >> 8) & 0x0f] +\n        HEX_CHARS[(h0 >> 4) & 0x0f] +\n        HEX_CHARS[h0 & 0x0f] +\n        HEX_CHARS[(h1 >> 28) & 0x0f] +\n        HEX_CHARS[(h1 >> 24) & 0x0f] +\n        HEX_CHARS[(h1 >> 20) & 0x0f] +\n        HEX_CHARS[(h1 >> 16) & 0x0f] +\n        HEX_CHARS[(h1 >> 12) & 0x0f] +\n        HEX_CHARS[(h1 >> 8) & 0x0f] +\n        HEX_CHARS[(h1 >> 4) & 0x0f] +\n        HEX_CHARS[h1 & 0x0f] +\n        HEX_CHARS[(h2 >> 28) & 0x0f] +\n        HEX_CHARS[(h2 >> 24) & 0x0f] +\n        HEX_CHARS[(h2 >> 20) & 0x0f] +\n        HEX_CHARS[(h2 >> 16) & 0x0f] +\n        HEX_CHARS[(h2 >> 12) & 0x0f] +\n        HEX_CHARS[(h2 >> 8) & 0x0f] +\n        HEX_CHARS[(h2 >> 4) & 0x0f] +\n        HEX_CHARS[h2 & 0x0f] +\n        HEX_CHARS[(h3 >> 28) & 0x0f] +\n        HEX_CHARS[(h3 >> 24) & 0x0f] +\n        HEX_CHARS[(h3 >> 20) & 0x0f] +\n        HEX_CHARS[(h3 >> 16) & 0x0f] +\n        HEX_CHARS[(h3 >> 12) & 0x0f] +\n        HEX_CHARS[(h3 >> 8) & 0x0f] +\n        HEX_CHARS[(h3 >> 4) & 0x0f] +\n        HEX_CHARS[h3 & 0x0f] +\n        HEX_CHARS[(h4 >> 28) & 0x0f] +\n        HEX_CHARS[(h4 >> 24) & 0x0f] +\n        HEX_CHARS[(h4 >> 20) & 0x0f] +\n        HEX_CHARS[(h4 >> 16) & 0x0f] +\n        HEX_CHARS[(h4 >> 12) & 0x0f] +\n        HEX_CHARS[(h4 >> 8) & 0x0f] +\n        HEX_CHARS[(h4 >> 4) & 0x0f] +\n        HEX_CHARS[h4 & 0x0f]);\n};\nSha1.prototype.toString = Sha1.prototype.hex;\nSha1.prototype.digest = function () {\n    this.finalize();\n    var h0 = this.h0, h1 = this.h1, h2 = this.h2, h3 = this.h3, h4 = this.h4;\n    return [\n        (h0 >> 24) & 0xff,\n        (h0 >> 16) & 0xff,\n        (h0 >> 8) & 0xff,\n        h0 & 0xff,\n        (h1 >> 24) & 0xff,\n        (h1 >> 16) & 0xff,\n        (h1 >> 8) & 0xff,\n        h1 & 0xff,\n        (h2 >> 24) & 0xff,\n        (h2 >> 16) & 0xff,\n        (h2 >> 8) & 0xff,\n        h2 & 0xff,\n        (h3 >> 24) & 0xff,\n        (h3 >> 16) & 0xff,\n        (h3 >> 8) & 0xff,\n        h3 & 0xff,\n        (h4 >> 24) & 0xff,\n        (h4 >> 16) & 0xff,\n        (h4 >> 8) & 0xff,\n        h4 & 0xff,\n    ];\n};\nSha1.prototype.array = Sha1.prototype.digest;\nSha1.prototype.arrayBuffer = function () {\n    this.finalize();\n    var buffer = new ArrayBuffer(20);\n    var dataView = new DataView(buffer);\n    dataView.setUint32(0, this.h0);\n    dataView.setUint32(4, this.h1);\n    dataView.setUint32(8, this.h2);\n    dataView.setUint32(12, this.h3);\n    dataView.setUint32(16, this.h4);\n    return buffer;\n};\nlet hasLoggedWarning = false;\n/**\n * @deprecated Use `makeDefaultKeyEncoder()` to create a custom key encoder.\n * This function will be removed in a future version.\n */\nexport const insecureHash = (message) => {\n    if (!hasLoggedWarning) {\n        console.warn([\n            `The default method for hashing keys is insecure and will be replaced in a future version,`,\n            `but hasn't been replaced yet as to not break existing caches. It's recommended that you use`,\n            `a more secure hashing algorithm to avoid cache poisoning.`,\n            ``,\n            `See this page for more information:`,\n            `|`,\n            `└> https://js.langchain.com/docs/troubleshooting/warnings/insecure-cache-algorithm`,\n        ].join(\"\\n\"));\n        hasLoggedWarning = true;\n    }\n    return new Sha1(true).update(message)[\"hex\"]();\n};\n", "// @ts-nocheck\n// Inlined to deal with portability issues with importing crypto module\n/**\n * [js-sha256]{@link https://github.com/emn178/js-sha256}\n *\n * @version 0.11.1\n * @author Chen, Yi-Cyuan [emn178@gmail.com]\n * @copyright Chen, Yi-Cyuan 2014-2025\n * @license MIT\n */\n/*jslint bitwise: true */\n\"use strict\";\nvar HEX_CHARS = \"0123456789abcdef\".split(\"\");\nvar EXTRA = [-2147483648, 8388608, 32768, 128];\nvar SHIFT = [24, 16, 8, 0];\nvar K = [\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1,\n    0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,\n    0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174, 0xe49b69c1, 0xefbe4786,\n    0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147,\n    0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,\n    0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85, 0xa2bfe8a1, 0xa81a664b,\n    0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a,\n    0x5b9cca4f, 0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n    0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2,\n];\nvar OUTPUT_TYPES = [\"hex\", \"array\", \"digest\", \"arrayBuffer\"];\nvar blocks = [];\nfunction Sha256(is224, sharedMemory) {\n    if (sharedMemory) {\n        blocks[0] =\n            blocks[16] =\n                blocks[1] =\n                    blocks[2] =\n                        blocks[3] =\n                            blocks[4] =\n                                blocks[5] =\n                                    blocks[6] =\n                                        blocks[7] =\n                                            blocks[8] =\n                                                blocks[9] =\n                                                    blocks[10] =\n                                                        blocks[11] =\n                                                            blocks[12] =\n                                                                blocks[13] =\n                                                                    blocks[14] =\n                                                                        blocks[15] =\n                                                                            0;\n        this.blocks = blocks;\n    }\n    else {\n        this.blocks = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n    }\n    if (is224) {\n        this.h0 = 0xc1059ed8;\n        this.h1 = 0x367cd507;\n        this.h2 = 0x3070dd17;\n        this.h3 = 0xf70e5939;\n        this.h4 = 0xffc00b31;\n        this.h5 = 0x68581511;\n        this.h6 = 0x64f98fa7;\n        this.h7 = 0xbefa4fa4;\n    }\n    else {\n        // 256\n        this.h0 = 0x6a09e667;\n        this.h1 = 0xbb67ae85;\n        this.h2 = 0x3c6ef372;\n        this.h3 = 0xa54ff53a;\n        this.h4 = 0x510e527f;\n        this.h5 = 0x9b05688c;\n        this.h6 = 0x1f83d9ab;\n        this.h7 = 0x5be0cd19;\n    }\n    this.block = this.start = this.bytes = this.hBytes = 0;\n    this.finalized = this.hashed = false;\n    this.first = true;\n    this.is224 = is224;\n}\nSha256.prototype.update = function (message) {\n    if (this.finalized) {\n        return;\n    }\n    var notString, type = typeof message;\n    if (type !== \"string\") {\n        if (type === \"object\") {\n            if (message === null) {\n                throw new Error(ERROR);\n            }\n            else if (ARRAY_BUFFER && message.constructor === ArrayBuffer) {\n                message = new Uint8Array(message);\n            }\n            else if (!Array.isArray(message)) {\n                if (!ARRAY_BUFFER || !ArrayBuffer.isView(message)) {\n                    throw new Error(ERROR);\n                }\n            }\n        }\n        else {\n            throw new Error(ERROR);\n        }\n        notString = true;\n    }\n    var code, index = 0, i, length = message.length, blocks = this.blocks;\n    while (index < length) {\n        if (this.hashed) {\n            this.hashed = false;\n            blocks[0] = this.block;\n            this.block =\n                blocks[16] =\n                    blocks[1] =\n                        blocks[2] =\n                            blocks[3] =\n                                blocks[4] =\n                                    blocks[5] =\n                                        blocks[6] =\n                                            blocks[7] =\n                                                blocks[8] =\n                                                    blocks[9] =\n                                                        blocks[10] =\n                                                            blocks[11] =\n                                                                blocks[12] =\n                                                                    blocks[13] =\n                                                                        blocks[14] =\n                                                                            blocks[15] =\n                                                                                0;\n        }\n        if (notString) {\n            for (i = this.start; index < length && i < 64; ++index) {\n                blocks[i >>> 2] |= message[index] << SHIFT[i++ & 3];\n            }\n        }\n        else {\n            for (i = this.start; index < length && i < 64; ++index) {\n                code = message.charCodeAt(index);\n                if (code < 0x80) {\n                    blocks[i >>> 2] |= code << SHIFT[i++ & 3];\n                }\n                else if (code < 0x800) {\n                    blocks[i >>> 2] |= (0xc0 | (code >>> 6)) << SHIFT[i++ & 3];\n                    blocks[i >>> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n                }\n                else if (code < 0xd800 || code >= 0xe000) {\n                    blocks[i >>> 2] |= (0xe0 | (code >>> 12)) << SHIFT[i++ & 3];\n                    blocks[i >>> 2] |= (0x80 | ((code >>> 6) & 0x3f)) << SHIFT[i++ & 3];\n                    blocks[i >>> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n                }\n                else {\n                    code =\n                        0x10000 +\n                            (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));\n                    blocks[i >>> 2] |= (0xf0 | (code >>> 18)) << SHIFT[i++ & 3];\n                    blocks[i >>> 2] |= (0x80 | ((code >>> 12) & 0x3f)) << SHIFT[i++ & 3];\n                    blocks[i >>> 2] |= (0x80 | ((code >>> 6) & 0x3f)) << SHIFT[i++ & 3];\n                    blocks[i >>> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n                }\n            }\n        }\n        this.lastByteIndex = i;\n        this.bytes += i - this.start;\n        if (i >= 64) {\n            this.block = blocks[16];\n            this.start = i - 64;\n            this.hash();\n            this.hashed = true;\n        }\n        else {\n            this.start = i;\n        }\n    }\n    if (this.bytes > 4294967295) {\n        this.hBytes += (this.bytes / 4294967296) << 0;\n        this.bytes = this.bytes % 4294967296;\n    }\n    return this;\n};\nSha256.prototype.finalize = function () {\n    if (this.finalized) {\n        return;\n    }\n    this.finalized = true;\n    var blocks = this.blocks, i = this.lastByteIndex;\n    blocks[16] = this.block;\n    blocks[i >>> 2] |= EXTRA[i & 3];\n    this.block = blocks[16];\n    if (i >= 56) {\n        if (!this.hashed) {\n            this.hash();\n        }\n        blocks[0] = this.block;\n        blocks[16] =\n            blocks[1] =\n                blocks[2] =\n                    blocks[3] =\n                        blocks[4] =\n                            blocks[5] =\n                                blocks[6] =\n                                    blocks[7] =\n                                        blocks[8] =\n                                            blocks[9] =\n                                                blocks[10] =\n                                                    blocks[11] =\n                                                        blocks[12] =\n                                                            blocks[13] =\n                                                                blocks[14] =\n                                                                    blocks[15] =\n                                                                        0;\n    }\n    blocks[14] = (this.hBytes << 3) | (this.bytes >>> 29);\n    blocks[15] = this.bytes << 3;\n    this.hash();\n};\nSha256.prototype.hash = function () {\n    var a = this.h0, b = this.h1, c = this.h2, d = this.h3, e = this.h4, f = this.h5, g = this.h6, h = this.h7, blocks = this.blocks, j, s0, s1, maj, t1, t2, ch, ab, da, cd, bc;\n    for (j = 16; j < 64; ++j) {\n        // rightrotate\n        t1 = blocks[j - 15];\n        s0 = ((t1 >>> 7) | (t1 << 25)) ^ ((t1 >>> 18) | (t1 << 14)) ^ (t1 >>> 3);\n        t1 = blocks[j - 2];\n        s1 = ((t1 >>> 17) | (t1 << 15)) ^ ((t1 >>> 19) | (t1 << 13)) ^ (t1 >>> 10);\n        blocks[j] = (blocks[j - 16] + s0 + blocks[j - 7] + s1) << 0;\n    }\n    bc = b & c;\n    for (j = 0; j < 64; j += 4) {\n        if (this.first) {\n            if (this.is224) {\n                ab = 300032;\n                t1 = blocks[0] - 1413257819;\n                h = (t1 - 150054599) << 0;\n                d = (t1 + 24177077) << 0;\n            }\n            else {\n                ab = 704751109;\n                t1 = blocks[0] - 210244248;\n                h = (t1 - 1521486534) << 0;\n                d = (t1 + 143694565) << 0;\n            }\n            this.first = false;\n        }\n        else {\n            s0 =\n                ((a >>> 2) | (a << 30)) ^\n                    ((a >>> 13) | (a << 19)) ^\n                    ((a >>> 22) | (a << 10));\n            s1 =\n                ((e >>> 6) | (e << 26)) ^\n                    ((e >>> 11) | (e << 21)) ^\n                    ((e >>> 25) | (e << 7));\n            ab = a & b;\n            maj = ab ^ (a & c) ^ bc;\n            ch = (e & f) ^ (~e & g);\n            t1 = h + s1 + ch + K[j] + blocks[j];\n            t2 = s0 + maj;\n            h = (d + t1) << 0;\n            d = (t1 + t2) << 0;\n        }\n        s0 =\n            ((d >>> 2) | (d << 30)) ^\n                ((d >>> 13) | (d << 19)) ^\n                ((d >>> 22) | (d << 10));\n        s1 =\n            ((h >>> 6) | (h << 26)) ^\n                ((h >>> 11) | (h << 21)) ^\n                ((h >>> 25) | (h << 7));\n        da = d & a;\n        maj = da ^ (d & b) ^ ab;\n        ch = (g & h) ^ (~g & e);\n        t1 = f + s1 + ch + K[j + 1] + blocks[j + 1];\n        t2 = s0 + maj;\n        g = (c + t1) << 0;\n        c = (t1 + t2) << 0;\n        s0 =\n            ((c >>> 2) | (c << 30)) ^\n                ((c >>> 13) | (c << 19)) ^\n                ((c >>> 22) | (c << 10));\n        s1 =\n            ((g >>> 6) | (g << 26)) ^\n                ((g >>> 11) | (g << 21)) ^\n                ((g >>> 25) | (g << 7));\n        cd = c & d;\n        maj = cd ^ (c & a) ^ da;\n        ch = (f & g) ^ (~f & h);\n        t1 = e + s1 + ch + K[j + 2] + blocks[j + 2];\n        t2 = s0 + maj;\n        f = (b + t1) << 0;\n        b = (t1 + t2) << 0;\n        s0 =\n            ((b >>> 2) | (b << 30)) ^\n                ((b >>> 13) | (b << 19)) ^\n                ((b >>> 22) | (b << 10));\n        s1 =\n            ((f >>> 6) | (f << 26)) ^\n                ((f >>> 11) | (f << 21)) ^\n                ((f >>> 25) | (f << 7));\n        bc = b & c;\n        maj = bc ^ (b & d) ^ cd;\n        ch = (f & g) ^ (~f & h);\n        t1 = e + s1 + ch + K[j + 3] + blocks[j + 3];\n        t2 = s0 + maj;\n        e = (a + t1) << 0;\n        a = (t1 + t2) << 0;\n        this.chromeBugWorkAround = true;\n    }\n    this.h0 = (this.h0 + a) << 0;\n    this.h1 = (this.h1 + b) << 0;\n    this.h2 = (this.h2 + c) << 0;\n    this.h3 = (this.h3 + d) << 0;\n    this.h4 = (this.h4 + e) << 0;\n    this.h5 = (this.h5 + f) << 0;\n    this.h6 = (this.h6 + g) << 0;\n    this.h7 = (this.h7 + h) << 0;\n};\nSha256.prototype.hex = function () {\n    this.finalize();\n    var h0 = this.h0, h1 = this.h1, h2 = this.h2, h3 = this.h3, h4 = this.h4, h5 = this.h5, h6 = this.h6, h7 = this.h7;\n    var hex = HEX_CHARS[(h0 >>> 28) & 0x0f] +\n        HEX_CHARS[(h0 >>> 24) & 0x0f] +\n        HEX_CHARS[(h0 >>> 20) & 0x0f] +\n        HEX_CHARS[(h0 >>> 16) & 0x0f] +\n        HEX_CHARS[(h0 >>> 12) & 0x0f] +\n        HEX_CHARS[(h0 >>> 8) & 0x0f] +\n        HEX_CHARS[(h0 >>> 4) & 0x0f] +\n        HEX_CHARS[h0 & 0x0f] +\n        HEX_CHARS[(h1 >>> 28) & 0x0f] +\n        HEX_CHARS[(h1 >>> 24) & 0x0f] +\n        HEX_CHARS[(h1 >>> 20) & 0x0f] +\n        HEX_CHARS[(h1 >>> 16) & 0x0f] +\n        HEX_CHARS[(h1 >>> 12) & 0x0f] +\n        HEX_CHARS[(h1 >>> 8) & 0x0f] +\n        HEX_CHARS[(h1 >>> 4) & 0x0f] +\n        HEX_CHARS[h1 & 0x0f] +\n        HEX_CHARS[(h2 >>> 28) & 0x0f] +\n        HEX_CHARS[(h2 >>> 24) & 0x0f] +\n        HEX_CHARS[(h2 >>> 20) & 0x0f] +\n        HEX_CHARS[(h2 >>> 16) & 0x0f] +\n        HEX_CHARS[(h2 >>> 12) & 0x0f] +\n        HEX_CHARS[(h2 >>> 8) & 0x0f] +\n        HEX_CHARS[(h2 >>> 4) & 0x0f] +\n        HEX_CHARS[h2 & 0x0f] +\n        HEX_CHARS[(h3 >>> 28) & 0x0f] +\n        HEX_CHARS[(h3 >>> 24) & 0x0f] +\n        HEX_CHARS[(h3 >>> 20) & 0x0f] +\n        HEX_CHARS[(h3 >>> 16) & 0x0f] +\n        HEX_CHARS[(h3 >>> 12) & 0x0f] +\n        HEX_CHARS[(h3 >>> 8) & 0x0f] +\n        HEX_CHARS[(h3 >>> 4) & 0x0f] +\n        HEX_CHARS[h3 & 0x0f] +\n        HEX_CHARS[(h4 >>> 28) & 0x0f] +\n        HEX_CHARS[(h4 >>> 24) & 0x0f] +\n        HEX_CHARS[(h4 >>> 20) & 0x0f] +\n        HEX_CHARS[(h4 >>> 16) & 0x0f] +\n        HEX_CHARS[(h4 >>> 12) & 0x0f] +\n        HEX_CHARS[(h4 >>> 8) & 0x0f] +\n        HEX_CHARS[(h4 >>> 4) & 0x0f] +\n        HEX_CHARS[h4 & 0x0f] +\n        HEX_CHARS[(h5 >>> 28) & 0x0f] +\n        HEX_CHARS[(h5 >>> 24) & 0x0f] +\n        HEX_CHARS[(h5 >>> 20) & 0x0f] +\n        HEX_CHARS[(h5 >>> 16) & 0x0f] +\n        HEX_CHARS[(h5 >>> 12) & 0x0f] +\n        HEX_CHARS[(h5 >>> 8) & 0x0f] +\n        HEX_CHARS[(h5 >>> 4) & 0x0f] +\n        HEX_CHARS[h5 & 0x0f] +\n        HEX_CHARS[(h6 >>> 28) & 0x0f] +\n        HEX_CHARS[(h6 >>> 24) & 0x0f] +\n        HEX_CHARS[(h6 >>> 20) & 0x0f] +\n        HEX_CHARS[(h6 >>> 16) & 0x0f] +\n        HEX_CHARS[(h6 >>> 12) & 0x0f] +\n        HEX_CHARS[(h6 >>> 8) & 0x0f] +\n        HEX_CHARS[(h6 >>> 4) & 0x0f] +\n        HEX_CHARS[h6 & 0x0f];\n    if (!this.is224) {\n        hex +=\n            HEX_CHARS[(h7 >>> 28) & 0x0f] +\n                HEX_CHARS[(h7 >>> 24) & 0x0f] +\n                HEX_CHARS[(h7 >>> 20) & 0x0f] +\n                HEX_CHARS[(h7 >>> 16) & 0x0f] +\n                HEX_CHARS[(h7 >>> 12) & 0x0f] +\n                HEX_CHARS[(h7 >>> 8) & 0x0f] +\n                HEX_CHARS[(h7 >>> 4) & 0x0f] +\n                HEX_CHARS[h7 & 0x0f];\n    }\n    return hex;\n};\nSha256.prototype.toString = Sha256.prototype.hex;\nSha256.prototype.digest = function () {\n    this.finalize();\n    var h0 = this.h0, h1 = this.h1, h2 = this.h2, h3 = this.h3, h4 = this.h4, h5 = this.h5, h6 = this.h6, h7 = this.h7;\n    var arr = [\n        (h0 >>> 24) & 0xff,\n        (h0 >>> 16) & 0xff,\n        (h0 >>> 8) & 0xff,\n        h0 & 0xff,\n        (h1 >>> 24) & 0xff,\n        (h1 >>> 16) & 0xff,\n        (h1 >>> 8) & 0xff,\n        h1 & 0xff,\n        (h2 >>> 24) & 0xff,\n        (h2 >>> 16) & 0xff,\n        (h2 >>> 8) & 0xff,\n        h2 & 0xff,\n        (h3 >>> 24) & 0xff,\n        (h3 >>> 16) & 0xff,\n        (h3 >>> 8) & 0xff,\n        h3 & 0xff,\n        (h4 >>> 24) & 0xff,\n        (h4 >>> 16) & 0xff,\n        (h4 >>> 8) & 0xff,\n        h4 & 0xff,\n        (h5 >>> 24) & 0xff,\n        (h5 >>> 16) & 0xff,\n        (h5 >>> 8) & 0xff,\n        h5 & 0xff,\n        (h6 >>> 24) & 0xff,\n        (h6 >>> 16) & 0xff,\n        (h6 >>> 8) & 0xff,\n        h6 & 0xff,\n    ];\n    if (!this.is224) {\n        arr.push((h7 >>> 24) & 0xff, (h7 >>> 16) & 0xff, (h7 >>> 8) & 0xff, h7 & 0xff);\n    }\n    return arr;\n};\nSha256.prototype.array = Sha256.prototype.digest;\nSha256.prototype.arrayBuffer = function () {\n    this.finalize();\n    var buffer = new ArrayBuffer(this.is224 ? 28 : 32);\n    var dataView = new DataView(buffer);\n    dataView.setUint32(0, this.h0);\n    dataView.setUint32(4, this.h1);\n    dataView.setUint32(8, this.h2);\n    dataView.setUint32(12, this.h3);\n    dataView.setUint32(16, this.h4);\n    dataView.setUint32(20, this.h5);\n    dataView.setUint32(24, this.h6);\n    if (!this.is224) {\n        dataView.setUint32(28, this.h7);\n    }\n    return buffer;\n};\nexport const sha256 = (...strings) => {\n    return new Sha256(false, true).update(strings.join(\"\")).hex();\n};\n", "/**\n * Interface for interacting with a document.\n */\nexport class Document {\n    constructor(fields) {\n        Object.defineProperty(this, \"pageContent\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"metadata\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        // The ID field is optional at the moment.\n        // It will likely become required in a future major release after\n        // it has been adopted by enough vectorstore implementations.\n        /**\n         * An optional identifier for the document.\n         *\n         * Ideally this should be unique across the document collection and formatted\n         * as a UUID, but this will not be enforced.\n         */\n        Object.defineProperty(this, \"id\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.pageContent =\n            fields.pageContent !== undefined ? fields.pageContent.toString() : \"\";\n        this.metadata = fields.metadata ?? {};\n        this.id = fields.id;\n    }\n}\n", "import { v5 as uuidv5 } from \"uuid\";\nimport { UUIDV5_NAMESPACE } from \"./record_manager.js\";\nimport { insecureHash } from \"../utils/hash.js\";\nimport { Document } from \"../documents/document.js\";\n/**\n * HashedDocument is a Document with hashes calculated.\n * Hashes are calculated based on page content and metadata.\n * It is used for indexing.\n */\nexport class _HashedDocument {\n    constructor(fields) {\n        Object.defineProperty(this, \"uid\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"hash_\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"contentHash\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"metadataHash\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"pageContent\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"metadata\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        // For backwards compatibility, we use a default key encoder\n        // that uses SHA-1 to hash the prompt and LLM key. This will also print a warning\n        // about the security implications of using SHA-1 as a key encoder.\n        Object.defineProperty(this, \"keyEncoder\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: insecureHash\n        });\n        this.uid = fields.uid;\n        this.pageContent = fields.pageContent;\n        this.metadata = fields.metadata;\n    }\n    makeDefaultKeyEncoder(keyEncoderFn) {\n        this.keyEncoder = keyEncoderFn;\n    }\n    calculateHashes() {\n        const forbiddenKeys = [\"hash_\", \"content_hash\", \"metadata_hash\"];\n        for (const key of forbiddenKeys) {\n            if (key in this.metadata) {\n                throw new Error(`Metadata cannot contain key ${key} as it is reserved for internal use. Restricted keys: [${forbiddenKeys.join(\", \")}]`);\n            }\n        }\n        const contentHash = this._hashStringToUUID(this.pageContent);\n        try {\n            const metadataHash = this._hashNestedDictToUUID(this.metadata);\n            this.contentHash = contentHash;\n            this.metadataHash = metadataHash;\n        }\n        catch (e) {\n            throw new Error(`Failed to hash metadata: ${e}. Please use a dict that can be serialized using json.`);\n        }\n        this.hash_ = this._hashStringToUUID(this.contentHash + this.metadataHash);\n        if (!this.uid) {\n            this.uid = this.hash_;\n        }\n    }\n    toDocument() {\n        return new Document({\n            pageContent: this.pageContent,\n            metadata: this.metadata,\n        });\n    }\n    static fromDocument(document, uid) {\n        const doc = new this({\n            pageContent: document.pageContent,\n            metadata: document.metadata,\n            uid: uid || document.uid,\n        });\n        doc.calculateHashes();\n        return doc;\n    }\n    _hashStringToUUID(inputString) {\n        const hash_value = this.keyEncoder(inputString);\n        return uuidv5(hash_value, UUIDV5_NAMESPACE);\n    }\n    _hashNestedDictToUUID(data) {\n        const serialized_data = JSON.stringify(data, Object.keys(data).sort());\n        const hash_value = this.keyEncoder(serialized_data);\n        return uuidv5(hash_value, UUIDV5_NAMESPACE);\n    }\n}\nexport function _batch(size, iterable) {\n    const batches = [];\n    let currentBatch = [];\n    iterable.forEach((item) => {\n        currentBatch.push(item);\n        if (currentBatch.length >= size) {\n            batches.push(currentBatch);\n            currentBatch = [];\n        }\n    });\n    if (currentBatch.length > 0) {\n        batches.push(currentBatch);\n    }\n    return batches;\n}\nexport function _deduplicateInOrder(hashedDocuments) {\n    const seen = new Set();\n    const deduplicated = [];\n    for (const hashedDoc of hashedDocuments) {\n        if (!hashedDoc.hash_) {\n            throw new Error(\"Hashed document does not have a hash\");\n        }\n        if (!seen.has(hashedDoc.hash_)) {\n            seen.add(hashedDoc.hash_);\n            deduplicated.push(hashedDoc);\n        }\n    }\n    return deduplicated;\n}\nexport function _getSourceIdAssigner(sourceIdKey) {\n    if (sourceIdKey === null) {\n        return (_doc) => null;\n    }\n    else if (typeof sourceIdKey === \"string\") {\n        return (doc) => doc.metadata[sourceIdKey];\n    }\n    else if (typeof sourceIdKey === \"function\") {\n        return sourceIdKey;\n    }\n    else {\n        throw new Error(`sourceIdKey should be null, a string or a function, got ${typeof sourceIdKey}`);\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const _isBaseDocumentLoader = (arg) => {\n    if (\"load\" in arg &&\n        typeof arg.load === \"function\" &&\n        \"loadAndSplit\" in arg &&\n        typeof arg.loadAndSplit === \"function\") {\n        return true;\n    }\n    return false;\n};\n/**\n * Index data from the doc source into the vector store.\n *\n * Indexing functionality uses a manager to keep track of which documents\n * are in the vector store.\n *\n * This allows us to keep track of which documents were updated, and which\n * documents were deleted, which documents should be skipped.\n *\n * For the time being, documents are indexed using their hashes, and users\n *  are not able to specify the uid of the document.\n *\n * @param {IndexArgs} args\n * @param {BaseDocumentLoader | DocumentInterface[]} args.docsSource The source of documents to index. Can be a DocumentLoader or a list of Documents.\n * @param {RecordManagerInterface} args.recordManager The record manager to use for keeping track of indexed documents.\n * @param {VectorStore} args.vectorStore The vector store to use for storing the documents.\n * @param {IndexOptions | undefined} args.options Options for indexing.\n * @returns {Promise<IndexingResult>}\n */\nexport async function index(args) {\n    const { docsSource, recordManager, vectorStore, options } = args;\n    const { batchSize = 100, cleanup, sourceIdKey, cleanupBatchSize = 1000, forceUpdate = false, } = options ?? {};\n    if (cleanup === \"incremental\" && !sourceIdKey) {\n        throw new Error(\"sourceIdKey is required when cleanup mode is incremental. Please provide through 'options.sourceIdKey'.\");\n    }\n    const docs = _isBaseDocumentLoader(docsSource)\n        ? await docsSource.load()\n        : docsSource;\n    const sourceIdAssigner = _getSourceIdAssigner(sourceIdKey ?? null);\n    const indexStartDt = await recordManager.getTime();\n    let numAdded = 0;\n    let numDeleted = 0;\n    let numUpdated = 0;\n    let numSkipped = 0;\n    const batches = _batch(batchSize ?? 100, docs);\n    for (const batch of batches) {\n        const hashedDocs = _deduplicateInOrder(batch.map((doc) => _HashedDocument.fromDocument(doc)));\n        const sourceIds = hashedDocs.map((doc) => sourceIdAssigner(doc));\n        if (cleanup === \"incremental\") {\n            hashedDocs.forEach((_hashedDoc, index) => {\n                const source = sourceIds[index];\n                if (source === null) {\n                    throw new Error(\"sourceIdKey must be provided when cleanup is incremental\");\n                }\n            });\n        }\n        const batchExists = await recordManager.exists(hashedDocs.map((doc) => doc.uid));\n        const uids = [];\n        const docsToIndex = [];\n        const docsToUpdate = [];\n        const seenDocs = new Set();\n        hashedDocs.forEach((hashedDoc, i) => {\n            const docExists = batchExists[i];\n            if (docExists) {\n                if (forceUpdate) {\n                    seenDocs.add(hashedDoc.uid);\n                }\n                else {\n                    docsToUpdate.push(hashedDoc.uid);\n                    return;\n                }\n            }\n            uids.push(hashedDoc.uid);\n            docsToIndex.push(hashedDoc.toDocument());\n        });\n        if (docsToUpdate.length > 0) {\n            await recordManager.update(docsToUpdate, { timeAtLeast: indexStartDt });\n            numSkipped += docsToUpdate.length;\n        }\n        if (docsToIndex.length > 0) {\n            await vectorStore.addDocuments(docsToIndex, { ids: uids });\n            numAdded += docsToIndex.length - seenDocs.size;\n            numUpdated += seenDocs.size;\n        }\n        await recordManager.update(hashedDocs.map((doc) => doc.uid), { timeAtLeast: indexStartDt, groupIds: sourceIds });\n        if (cleanup === \"incremental\") {\n            sourceIds.forEach((sourceId) => {\n                if (!sourceId)\n                    throw new Error(\"Source id cannot be null\");\n            });\n            const uidsToDelete = await recordManager.listKeys({\n                before: indexStartDt,\n                groupIds: sourceIds,\n            });\n            if (uidsToDelete.length > 0) {\n                await vectorStore.delete({ ids: uidsToDelete });\n                await recordManager.deleteKeys(uidsToDelete);\n                numDeleted += uidsToDelete.length;\n            }\n        }\n    }\n    if (cleanup === \"full\") {\n        let uidsToDelete = await recordManager.listKeys({\n            before: indexStartDt,\n            limit: cleanupBatchSize,\n        });\n        while (uidsToDelete.length > 0) {\n            await vectorStore.delete({ ids: uidsToDelete });\n            await recordManager.deleteKeys(uidsToDelete);\n            numDeleted += uidsToDelete.length;\n            uidsToDelete = await recordManager.listKeys({\n                before: indexStartDt,\n                limit: cleanupBatchSize,\n            });\n        }\n    }\n    return {\n        numAdded,\n        numDeleted,\n        numUpdated,\n        numSkipped,\n    };\n}\n"],
  "mappings": "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",
  "names": ["camelCase", "K", "index", "blocks", "f", "HEX_CHARS", "EXTRA", "SHIFT", "blocks", "index", "SHIFT", "EXTRA", "f", "HEX_CHARS", "index"]
}
